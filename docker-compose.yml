version: "3.7"
services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=yape
    volumes:
      - ./YapeService/helpers/transactions.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s


  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
      - 29092:29092
  init-kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      kafka:
        condition: service_started
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --topic antifraud_service --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --topic antifraud_service_responce --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  kakfa-service:
    build:
      context: ./KafkaService
      dockerfile: Dockerfile
    restart: always
    environment:
      KAFKA_HOST: "kafka:9092"
    depends_on:
      kafka:
        condition: service_started

  yape-service:
    build:
      context: ./YapeService
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: "postgres"
      KAFKA_HOST: "kafka:9092"
    ports:
      - '3000:3000'
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
      kakfa-service:
        condition: service_started